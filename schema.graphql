type Deposit @entity {
	id: ID! # {bounty address}-{user address}-{token-address}-{receiveTime}
	tokenAddress: Bytes!
	value: BigInt!
	sender: User!
	bounty: Bounty!
	tokenBalance: TokenBalance!
	receiveTime: BigInt
	organization: Organization!
}

type Refund @entity {
	id: ID! # {bounty address}-{user address}-{token-address}-{refundTime}
	tokenAddress: Bytes!
	value: BigInt!
	sender: User!
	bounty: Bounty!
	tokenBalance: TokenBalance!
	refundTime: BigInt
	organization: Organization!
}

type Payout @entity {
	id: ID! # {bounty address}-{user address}-{token-address}-{payoutTime}
	tokenAddress: Bytes!
	value: BigInt!
	payoutTime: BigInt
	payoutAddress: User!
	bounty: Bounty!
	tokenBalance: TokenBalance!
	organization: Organization!
}

# All deposits, refunds and total values per token
type TokenBalance @entity {
	id: ID!
	totalValue: BigInt!
	deposits: [Deposit!]! @derivedFrom(field: "tokenBalance")
	refunds: [Refund!]! @derivedFrom(field: "tokenBalance")
	payouts: [Payout!]! @derivedFrom(field: "tokenBalance")
}

# Total payouts per user per token
type UserEarnedTokenBalance @entity {
	id: ID!
	user: User!
	totalValue: BigInt!
}

# Total funding per user per token (equal to Deposits - Refunds)
type UserFundedTokenBalance @entity {
	id: ID!
	user: User!
	totalValue: BigInt!
}

type Bounty @entity {
	id: ID! # Bounty address hex string
	bountyId: String!
	bountyAddress: String!
	issuer: User!
	bountyMintTime: BigInt!
	bountyClosedTime: BigInt
	status: BountyStatus!
	payoutAddress: User
	organization: Organization!
	deposits: [Deposit!]! @derivedFrom(field: "bounty")
	refunds: [Refund!]! @derivedFrom(field: "bounty")
	payouts: [Payout!]! @derivedFrom(field: "bounty")
}

type Organization @entity {
	id: ID!
	bountiesCreated: [Bounty!]! @derivedFrom(field: "organization")
	deposits: [Deposit!]! @derivedFrom(field: "organization")
	refunds: [Refund!]! @derivedFrom(field: "organization")
	payouts: [Payout!]! @derivedFrom(field: "organization")
}

# User (Funder, Closer, Issuer)
type User @entity {
	id: ID! # User address hex string
	bountiesCreated: [Bounty!]! @derivedFrom(field: "issuer")
	bountiesClosed: [Bounty!]! @derivedFrom(field: "payoutAddress")
	deposits: [Deposit!]! @derivedFrom(field: "sender")
	refunds: [Refund!]! @derivedFrom(field: "sender")
	payouts: [Payout!]! @derivedFrom(field: "payoutAddress")
	totalEarnedTokenBalance: [UserEarnedTokenBalance!]! @derivedFrom(field: "user")
	totalFundedTokenBalance: [UserFundedTokenBalance!]! @derivedFrom(field: "user")
}

enum BountyStatus {
  OPEN
	CLOSED
}